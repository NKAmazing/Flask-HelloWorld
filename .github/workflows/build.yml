name: GitHub Actions Flask-HelloWorld

env:
    REPO_NAME: ${{ github.event.repository.name }}
    IMAGE_NAME: ${{ secrets.ACR_NAME }}.azurecr.io/flask_project
    DNS_NAME: flask-helloworld-${{ github.run_id }}-${{ github.run_attempt }}
    IMAGE_VERSION: ${{ github.sha }}

on:
    workflow_dispatch:
    push:
        branches: [main]
        tags: 
            - 'v*.*.*'

jobs:
    build:
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
                working-directory: ${{ github.workspace }}
        steps:
            - name: Checkout GitHub Action
              uses: actions/checkout@v3

            - name: Get tag
              id: tag
              uses: dawidd6/action-get-tag@v1.1.0
              
            - name: Login via Docker
              uses: docker/login-action@v2
              with:
                    registry: ${{ secrets.ACR_NAME }}.azurecr.io
                    username: ${{ secrets.REGISTRY_USERNAME }}
                    password: ${{ secrets.REGISTRY_PASSWORD }}
                    ecr: 'false'
                    logout: 'true'
            - run: |
                docker build . -t ${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}
                docker push ${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}
    deploy:
        runs-on: ubuntu-latest
        needs: build
        defaults:
            run:
                shell: bash
                working-directory: ${{ github.workspace }}
        steps:
            - name: 'Login via Azure CLI'
              uses: azure/login@v1
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}

            - name: 'Get tag'
              id: tag
              uses: dawidd6/action-get-tag@v1.1.0

            - name: 'Deploy Container Instance'
              uses: azure/aci-deploy@v1
              with:
                location: ${{ secrets.LOCATION }}
                name: flask-helloworld
                resource-group: ${{ secrets.RESOURCE_GROUP }}
                image: ${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}
                dns-name-label: ${{ env.DNS_NAME }}
                registry-username: ${{ secrets.REGISTRY_USERNAME }}
                registry-password: ${{ secrets.REGISTRY_PASSWORD }}
                ports: 5000
                cpu: 1
                memory: 1

            - name: 'Logout'
              run: |
                az logout